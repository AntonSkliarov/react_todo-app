{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["TodoItem","todo","changeStatus","className","classNames","completed","type","value","id","onClick","event","target","title","TodoList","todos","htmlFor","map","key","length","href","initialTodos","App","useState","setTitle","setTodos","onSubmit","preventDefault","newTodo","Math","random","toString","substr","prevTodos","placeholder","onChange","checkedTodoId","checkedTodo","find","index","indexOf","todosCopy","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca999c60.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport function TodoItem({ todo, changeStatus }) {\n  return (\n    <li\n      className={classNames({ completed: todo.completed })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          value={todo.id}\n          onClick={event => changeStatus(event.target.value)}\n        />\n        <label>{todo.title}</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  changeStatus: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport function TodoList({ todos, changeStatus }) {\n  return (\n    <>\n      <section className=\"main\">\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <ul className=\"todo-list\">\n          {todos.map(todo => (\n            <TodoItem\n              todo={todo}\n              changeStatus={changeStatus}\n              key={todo.id}\n            />\n          ))}\n\n          {/* NEED TO DELETE SOME ELEMENTS UNDER THE COMMENT */}\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>asdfghj</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"completed\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>qwertyuio</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"editing\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>zxcvbnm</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>1234567890</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          {/* NEED TO DELETE SOME ELEMENTS ABOVE THE COMMENT */}\n\n        </ul>\n      </section>\n\n      <footer className=\"footer\">\n        {todos.length !== 0 && (\n          <span className=\"todo-count\">\n            {`${todos.length} item(s) left`}\n          </span>\n        )}\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  changeStatus: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isReuired,\n      title: PropTypes.string.isReuired,\n      completed: PropTypes.bool.isReuired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\n// DELETE INITIAL TODO?\n\nconst initialTodos = [{\n  completed: false, id: 'yqpsi41da', title: '1212123',\n}, {\n  completed: false, id: '3wonnlkkn', title: 'xcvnslk',\n}, { completed: false, id: 'i0b54y3z9', title: '-9adsf0' },\n];\n\nfunction App() {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(initialTodos);\n\n  const addTodo = (value) => {\n    setTitle(value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const newTodo = {\n      title,\n      id: Math.random().toString(36).substr(2, 9),\n      completed: false,\n    };\n\n    setTodos(prevTodos => (\n      [...prevTodos, newTodo]\n    ));\n    setTitle('');\n  };\n\n  const changeStatus = (checkedTodoId) => {\n    const checkedTodo = todos.find(todo => (\n      todo.id === checkedTodoId\n    ));\n    const index = todos.indexOf(checkedTodo);\n    const todosCopy = [...todos];\n\n    checkedTodo.completed = !checkedTodo.completed;\n\n    todosCopy.splice(index, 1, checkedTodo);\n\n    setTodos(todosCopy);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={event => addTodo(event.target.value)}\n          />\n        </form>\n      </header>\n      <TodoList\n        todos={todos}\n        changeStatus={changeStatus}\n      />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}