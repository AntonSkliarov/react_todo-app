{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["TodoItem","todo","changeStatus","deleteTodo","className","classNames","completed","type","value","id","onClick","event","target","checked","title","TodoList","todos","useState","allCompleted","setAllCompleted","useEffect","every","htmlFor","map","key","App","setTitle","setTodos","filteredTodos","setfilteredTodos","filterStatus","setFilterStatus","filter","filteredList","onSubmit","preventDefault","newTodo","Math","random","toString","substr","placeholder","onChange","length","checkedTodoId","uncheckedTodos","checkedTodo","find","index","indexOf","todosCopy","splice","todoIdForDelete","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5c3bbdf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport function TodoItem({ todo, changeStatus, deleteTodo }) {\n  // console.log('TodoItem test');\n\n  return (\n    <li\n      className={classNames({ completed: todo.completed })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          value={todo.id}\n          onClick={event => changeStatus(event.target.value)}\n          checked={todo.completed}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(todo.id)}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  changeStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport function TodoList({ todos, changeStatus, deleteTodo }) {\n  const [allCompleted, setAllCompleted] = useState(false);\n  // console.log('TodoList test');\n\n  useEffect(() => {\n    const completedStatusCheck = todos.every(todo => (\n      todo.completed === true\n    ));\n\n    if (completedStatusCheck) {\n      setAllCompleted(true);\n    }\n  }, [todos]);\n\n  const toggleAll = () => {\n    if (allCompleted) {\n      changeStatus('all');\n      setAllCompleted(false);\n    }\n  };\n\n  return (\n    <>\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={allCompleted}\n          onClick={toggleAll}\n        />\n        <label\n          htmlFor=\"toggle-all\"\n          title=\"Mark all as completed\"\n        >\n          Mark all as completed\n        </label>\n\n        <ul className=\"todo-list\">\n          {todos.map(todo => (\n            <TodoItem\n              todo={todo}\n              changeStatus={changeStatus}\n              key={todo.id}\n              deleteTodo={deleteTodo}\n            />\n          ))}\n\n          {/* NEED TO DELETE SOME ELEMENTS UNDER THE COMMENT */}\n          {/* <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>asdfghj</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"completed\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>qwertyuio</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"editing\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>zxcvbnm</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>1234567890</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li> */}\n\n          {/* NEED TO DELETE SOME ELEMENTS ABOVE THE COMMENT */}\n\n        </ul>\n      </section>\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  changeStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isReuired,\n      title: PropTypes.string.isReuired,\n      completed: PropTypes.bool.isReuired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { TodoList } from './components/TodoList';\n\n// DELETE INITIAL TODO?\n// const initialTodos = [{\n//   completed: false, id: 'yqpsi41da', title: '1212123',\n// }, {\n//   completed: false, id: '3wonnlkkn', title: 'xcvnslk',\n// }, { completed: false, id: 'i0b54y3z9', title: '-9adsf0' },\n// ];\n\n// DEBOUNCE\n// const debounce = (f, delay) => {\n//   let timerId;\n\n//   return (...args) => {\n//     clearTimeout(timerId);\n//     timerId = setTimeout(f, delay, ...args);\n//   };\n// };\n\nfunction App() {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [filteredTodos, setfilteredTodos] = useState(todos);\n  const [filterStatus, setFilterStatus] = useState('all');\n\n  // console.log('App test');\n\n  const addTodo = (value) => {\n    setTitle(value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const newTodo = {\n      title,\n      id: Math.random().toString(36).substr(2, 9),\n      completed: false,\n    };\n\n    setTodos([...todos, newTodo]);\n    setfilteredTodos([...todos, newTodo]);\n\n    setTitle('');\n  };\n\n  const changeStatus = (checkedTodoId) => {\n    if (checkedTodoId === 'all') {\n      const uncheckedTodos = todos.map(todo => (\n        {\n          ...todo,\n          completed: false,\n        }\n      ));\n\n      setTodos(uncheckedTodos);\n      setfilteredTodos(uncheckedTodos);\n\n      return;\n    }\n\n    const checkedTodo = todos.find(todo => (\n      todo.id === checkedTodoId\n    ));\n    const index = todos.indexOf(checkedTodo);\n    const todosCopy = [...todos];\n\n    checkedTodo.completed = !checkedTodo.completed;\n\n    todosCopy.splice(index, 1, checkedTodo);\n\n    setTodos(todosCopy);\n  };\n\n  useEffect(() => {\n    if (filterStatus === 'all') {\n      setfilteredTodos(todos);\n    } else {\n      const filter = filterStatus === 'completed';\n\n      const filteredList = todos.filter(todo => (\n        todo.completed === filter\n      ));\n\n      setfilteredTodos(filteredList);\n    }\n  }, [filterStatus, todos]);\n\n  const deleteTodo = (todoIdForDelete) => {\n    const filteredList = todos.filter(todo => (\n      todo.id !== todoIdForDelete\n    ));\n\n    setTodos(filteredList);\n    setfilteredTodos(filteredList);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={event => addTodo(event.target.value)}\n          />\n        </form>\n      </header>\n      {!!filteredTodos.length && (\n        <TodoList\n          todos={filteredTodos}\n          changeStatus={changeStatus}\n          deleteTodo={deleteTodo}\n        />\n      )}\n\n      <footer className=\"footer\">\n        {filteredTodos.length !== 0 && (\n          <span className=\"todo-count\">\n            {`${filteredTodos.length} item(s) left`}\n          </span>\n        )}\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              href=\"#/\"\n              className=\"selected\"\n              onClick={() => setFilterStatus('all')}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              href=\"#/active\"\n              onClick={() => setFilterStatus('active')}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              href=\"#/completed\"\n              onClick={() => setFilterStatus('completed')}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}